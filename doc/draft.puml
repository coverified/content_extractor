@startuml
participant Supervisor
collections SourceHandler
collections UrlHandler
database WWW
collections Mutator
database API

== Initialization ==
Supervisor -[#blue]> API: //Get sources//
API -[#blue]> Supervisor
rnote over Supervisor: //If no sources://\n//Terminate//
Supervisor -> DistinctTagHandler: Init(...)
DistinctTagHandler -> Supervisor: DistinctTagHandlerInitialized

Supervisor -> SourceHandler: Init(...)
SourceHandler -> Mutator: Init(...)
Mutator -> SourceHandler: MutatorInitialized
SourceHandler --> UrlHandler: //Start pool//
SourceHandler -> UrlHandler: Init(...) //- Broadcast//
SourceHandler -> Supervisor: SourceHandlerInitialized(sourceId)

== Handling new urls ==
Supervisor -[#green]> SourceHandler: HandleNewUrls(...)
SourceHandler -[#blue]> API: //Get new urls//
API -[#blue]> SourceHandler
SourceHandler -[#green]> Supervisor: //If no urls://\nNewUrlsHandled(...)

loop
SourceHandler -> UrlHandler: HandleNewUrl(...)
UrlHandler -[#blue]> WWW: RequestHTMLContent
WWW -[#blue]> UrlHandler: HTMLContent

UrlHandler -> Mutator: CreateEntry(...)
Mutator -> DistinctTagHandler: ConsolidateArticleTags(...)
DistinctTagHandler -[#blue]> API: //Get matching tags//
API -[#blue]> DistinctTagHandler
DistinctTagHandler -> Mutator: ConnectToArticleTags(...)
Mutator -[#blue]> API: //Save entry//
API -[#blue]> Mutator
UrlHandler -> Mutator: UpdateUrl(...)
Mutator -[#blue]> API: //Update url//
API -[#blue]> Mutator
UrlHandler -> SourceHandler: NewUrlHandledSuccessfully(...)\n//NewUrlHandledWithFailure(...)//

Mutator -[#green]> SourceHandler: EntryCreationSuccessful(...)\n//EntryCreationFailed(...)//
Mutator -[#green]> SourceHandler: UrlUpdateSuccessful(...)\n//UrlUpdateFailed(...)//

SourceHandler -> SourceHandler: //If rate limit exceeded://\nReScheduleUrl(...)
end loop

rnote over SourceHandler
    All urls are handled
endrnote

SourceHandler -[#green]> Supervisor: NewUrlsHandled(...)

== Handle existing urls ==

Supervisor -[#green]> SourceHandler: HandleExistingUrls(...)
SourceHandler -[#blue]> API: //Get existing urls//
API -[#blue]> SourceHandler: //Get existing urls//
SourceHandler -[#green]> Supervisor: //If no existing urls://\nExistingUrlsHandled(...)
SourceHandler -[#blue]> API: //Get matching entries//
API -[#blue]> SourceHandler: //Get matching entries//

loop
    SourceHandler -[#green]> UrlHandler: HandleExistingUrl(...)
    rnote over SourceHandler: HandleExistingUrl contains\noptional field for existing entry
    UrlHandler -[#blue]> WWW: RequestHTMLContent
    WWW -[#blue]> UrlHandler: HTMLContent

    UrlHandler -[#green]> Mutator: CreateEntry(...) **or:**\nUpdateEntry(...)
    Mutator -[#green]> DistinctTagHandler: ConsolidateArticleTags(...)
    DistinctTagHandler -[#blue]> API: //Get matching tags//
    API -[#blue]> DistinctTagHandler
    DistinctTagHandler -[#green]> Mutator: ConnectToArticleTags(...)
    Mutator -[#blue]> API: //Save or//\n//update entry//
    API -[#blue]> Mutator
    UrlHandler -[#green]> Mutator: UpdateUrl(...)
    Mutator -[#blue]> API: //Update url//
    API -[#blue]> Mutator
    UrlHandler -[#green]> SourceHandler: ExistingUrlHandledSuccessfully(...)\n//ExistingUrlHandledWithFailure(...)//

    Mutator -[#green]> SourceHandler: EntryCreationSuccessful(...) **or:**\nEntryUpdateSuccessful(...)\n//EntryCreationFailed(...) **or:**//\n//EntryUpdateFailed(...)//

    Mutator -[#green]> SourceHandler: UrlUpdateSuccessful(...)\n//UrlUpdateFailed(...)//

    SourceHandler -[#green]> SourceHandler: //If rate limit exceeded://\nReScheduleUrl(...)
end loop

rnote over SourceHandler
    All existing urls handled
endrnote

SourceHandler -[#green]> Supervisor: ExistingUrlsHandled(...)

== Shutdown ==

Supervisor -[#green]> SourceHandler: Terminate(...)
SourceHandler --> UrlHandler: //terminates pool//
SourceHandler -> Mutator: Terminate
Mutator -> Mutator: Terminate\n//Wait until all//\n//tag requests//\n//are answered.//
...
Mutator --> SourceHandler: //Death watch//

SourceHandler -[#green]> Supervisor:Terminated(...)

rnote over Supervisor
    All sources are handled
endrnote
Supervisor -> DistinctTagHandler: Terminate
DistinctTagHandler --> Supervisor: //Death watch//

@enduml