@startuml
participant Supervisor
collections SourceHandler
collections UrlHandler
participant WWW
participant Mutator
database API


Supervisor -> SourceHandler: Init(...)
SourceHandler -> Supervisor: SourceHandlerInitialized(sourceId)
Supervisor -> SourceHandler: Run

SourceHandler -> DistinctTagHandler: Init(...)

loop
SourceHandler -> UrlHandler: HandleNewUrl(...)
UrlHandler -> WWW: RequestHTMLContent
WWW -> UrlHandler: HTMLContent

UrlHandler -> Mutator: CreateEntry(...)
Mutator -> DistinctTagHandler: ConsolidateArticleTags(...)
DistinctTagHandler -> Mutator: ConnectToArticleTags(...)
Mutator -> API: Mutation(...)
API -> Mutator: Result(...)
UrlHandler -> SourceHandler: NewUrlHandledSuccessfully(...)
UrlHandler -> SourceHandler: //NewUrlHandledWithFailure()//

SourceHandler -> SourceHandler: Option[ReScheduleUrl(...)]
end loop

== All new urls are handled ==

SourceHandler --> UrlHandler: //terminates pool//
SourceHandler -> Mutator: Terminate
...
Mutator --> SourceHandler: //Death watch//

SourceHandler -> Supervisor:SourceHandled(...)

== All sources are handled ==
Supervisor -> DistinctTagHandler: Terminate
DistinctTagHandler --> Supervisor: //Death watch//

@enduml