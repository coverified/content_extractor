////////////////////////////////////////////////////////////////////////////
// Generate config classes reflecting the application.conf template file
////////////////////////////////////////////////////////////////////////////
task genConfigClass {
	doLast {
		def tscfgJarFile = project.file('build/tscfg-' + tscfgVersion + '.jar')
		if (!tscfgJarFile.exists() || !tscfgJarFile.isFile()) {
			download {
				src 'https://github.com/carueda/tscfg/releases/download/v' + tscfgVersion + '/tscfg-' + tscfgVersion + '.jar'
				dest buildDir
			}
		}
		javaexec {
			main = "-jar"
			args = [
				"build/tscfg-${tscfgVersion}.jar",
				"--spec",
				"src/main/resources/domains.template.conf",
				"--scala",
				"--durations",
				"--pn",
				"info.coverified.extractor.profile",
				"--cn",
				"ProfileConfig",
				"--dd",
				"src/main/scala/info/coverified/extractor/profile/"
			]
		}
	}
}

////////////////////////////////////////////////////////////////////////////
// Generate sample config file reflecting the application.conf template file
// This can be used to setup a new simulation configuration
////////////////////////////////////////////////////////////////////////////
task genConfigSample {
	doLast {
		def tscfgJarFile = project.file('build/tscfg-' + tscfgVersion + '.jar')
		if (!tscfgJarFile.exists() || !tscfgJarFile.isFile()) {
			download {
				src 'https://github.com/carueda/tscfg/releases/download/v' + tscfgVersion + '/tscfg-' + tscfgVersion + '.jar'
				dest buildDir
			}
		}
		javaexec {
			main = "-jar"
			args = [
				"build/tscfg-${tscfgVersion}.jar",
				"--spec",
				"src/main/resources/domains.template.conf",
				"--tpl",
				"profiles/sample.conf"
			]
		}
	}
}
