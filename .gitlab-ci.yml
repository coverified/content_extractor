stages:
    - build
    - test
    - containerize
    - release
    - trigger

variables:
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.cache/.gradle"

cache:
  paths:
    - .cache/.gradle

prepareEnv4test:
    stage: build
    image: registry.gitlab.com/coverified/infrastructure/scala-base:latest
    script: ./gradlew prepareEnvironment -PapiUrl="https://www.coverified.info" -PprofilePath="in/some/directory" -PreAnalysisInterval=48 -PauthSecret=thisIsSecret -PchunkSize=1000 -PrepeatDelay=900
    artifacts:
        reports:
            dotenv: build.env
        expire_in: 12 hours

build4dockerImage:
    stage: build
    image: registry.gitlab.com/coverified/infrastructure/scala-base:latest
    script:
        - ./gradlew shadowJar
        - ./gradlew buildDotEnv
    only:
      - main
      - akka
    artifacts:
        reports:
            dotenv: dockerBuild.env
        paths:
            - build/libs/
        expire_in: 12 hours

test:
    stage: test
    image: registry.gitlab.com/coverified/infrastructure/scala-base:latest
    script: ./gradlew checkScoverage
    artifacts:
        reports:
            junit: build/test-results/test/**/TEST-*.xml
            cobertura: build/reports/scoverage/cobertura.xml
    needs:
        - prepareEnv4test

buildDockerImage:
    stage: containerize
    image: docker:latest
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --build-arg PROJECT_NAME --build-arg PROJECT_VERSION --build-arg MAIN_CLASS --build-arg PAGE_PROFILE_SOURCE_DIRECTORY --build-arg PAGE_PROFILE_PATH --build-arg SENTRY_RELEASE=$CI_COMMIT_SHA .
        - docker push $CI_REGISTRY_IMAGE:latest
    needs:
        - build4dockerImage
    cache: {}

release-image:
  stage: release
  script:
    - docker pull $CI_REGISTRY_IMAGE/CI_COMMIT_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker push --all-tags $CI_REGISTRY_IMAGE
  only:
    - main

trigger-build-with-config:
    stage: trigger
    trigger: coverified/infrastructure
    variables:
        IMAGE_TO_BUILD: content_extractor
        IMAGE_HASH: $CI_COMMIT_SHA
        IMAGE_BRANCH: $CI_COMMIT_REF_NAME
